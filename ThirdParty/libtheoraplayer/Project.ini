; MicroBuild
; Copyright (C) 2016 TwinDrills
; 
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>.

[MicroBuild]
RequiredVersion=0.1

[Project]
Name=libtheoraplayer
Group=Third Party
OutputType=StaticLib
OutputName=$(Name)
OutputExtension=$(Host.StaticLibExtension)
Language=Cpp
LanguageVersion=Cpp_11
RootNamespace=ZombieGrinder

[Build]
WarningLevel=None

[Flags]
CompilerWarningsFatal=0
LinkerWarningsFatal=0

[SearchPaths]
IncludeDirectory=$(Project.Directory)/include/theoraplayer
IncludeDirectory=$(Project.Directory)/src/YUV/libyuv/include
IncludeDirectory=$(Project.Directory)/src/YUV
IncludeDirectory=$(Project.Directory)/src/Theora

[Defines]
Define=_YUV_C
Define=__THEORA
Define=_LIB

[Files]

; Project Files
File=$(Project.Directory)/Project.ini

; Header Files
File=$(Project.Directory)/include/theoraplayer/TheoraAsync.h
File=$(Project.Directory)/include/theoraplayer/TheoraAudioInterface.h
File=$(Project.Directory)/include/theoraplayer/TheoraAudioPacketQueue.h
File=$(Project.Directory)/include/theoraplayer/TheoraDataSource.h
File=$(Project.Directory)/include/theoraplayer/TheoraException.h
File=$(Project.Directory)/include/theoraplayer/TheoraExport.h
File=$(Project.Directory)/include/theoraplayer/TheoraFrameQueue.h
File=$(Project.Directory)/include/theoraplayer/TheoraPixelTransform.h
File=$(Project.Directory)/include/theoraplayer/TheoraPlayer.h
File=$(Project.Directory)/include/theoraplayer/TheoraTimer.h
File=$(Project.Directory)/include/theoraplayer/TheoraUtil.h
File=$(Project.Directory)/include/theoraplayer/TheoraVideoClip.h
File=$(Project.Directory)/include/theoraplayer/TheoraVideoFrame.h
File=$(Project.Directory)/include/theoraplayer/TheoraVideoManager.h
File=$(Project.Directory)/include/theoraplayer/TheoraWorkerThread.h
File=$(Project.Directory)/src/Theora/TheoraVideoClip_Theora.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/basic_types.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/compare.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/convert.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/convert_argb.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/convert_from.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/convert_from_argb.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/cpu_id.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/mjpeg_decoder.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/planar_functions.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/rotate.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/rotate_argb.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/row.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/scale.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/scale_argb.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/scale_row.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/version.h
File=$(Project.Directory)/src/YUV/libyuv/include/libyuv/video_common.h
File=$(Project.Directory)/src/YUV/libyuv/yuv_libyuv.h
File=$(Project.Directory)/src/YUV/yuv_util.h
  
; Source Files
File=$(Project.Directory)/src/TheoraAsync.cpp
File=$(Project.Directory)/src/TheoraAudioInterface.cpp
File=$(Project.Directory)/src/TheoraAudioPacketQueue.cpp
File=$(Project.Directory)/src/TheoraDataSource.cpp
File=$(Project.Directory)/src/TheoraException.cpp
File=$(Project.Directory)/src/TheoraFrameQueue.cpp
File=$(Project.Directory)/src/TheoraTimer.cpp
File=$(Project.Directory)/src/TheoraUtil.cpp
File=$(Project.Directory)/src/TheoraVideoClip.cpp
File=$(Project.Directory)/src/TheoraVideoFrame.cpp
File=$(Project.Directory)/src/TheoraVideoManager.cpp
File=$(Project.Directory)/src/TheoraWorkerThread.cpp
File=$(Project.Directory)/src/Theora/TheoraVideoClip_Theora.cpp
File=$(Project.Directory)/src/YUV/C/yuv420_grey_c.c
File=$(Project.Directory)/src/YUV/C/yuv420_rgb_c.c
File=$(Project.Directory)/src/YUV/C/yuv420_yuv_c.c
File=$(Project.Directory)/src/YUV/libyuv/src/compare.cc
File=$(Project.Directory)/src/YUV/libyuv/src/compare_common.cc
File=$(Project.Directory)/src/YUV/libyuv/src/compare_gcc.cc
File=$(Project.Directory)/src/YUV/libyuv/src/compare_neon.cc
File=$(Project.Directory)/src/YUV/libyuv/src/compare_neon64.cc
File=$(Project.Directory)/src/YUV/libyuv/src/compare_posix.cc
File=$(Project.Directory)/src/YUV/libyuv/src/compare_win.cc
File=$(Project.Directory)/src/YUV/libyuv/src/convert.cc
File=$(Project.Directory)/src/YUV/libyuv/src/convert_argb.cc
File=$(Project.Directory)/src/YUV/libyuv/src/convert_from.cc
File=$(Project.Directory)/src/YUV/libyuv/src/convert_from_argb.cc
File=$(Project.Directory)/src/YUV/libyuv/src/convert_jpeg.cc
File=$(Project.Directory)/src/YUV/libyuv/src/convert_to_argb.cc
File=$(Project.Directory)/src/YUV/libyuv/src/convert_to_i420.cc
File=$(Project.Directory)/src/YUV/libyuv/src/cpu_id.cc
File=$(Project.Directory)/src/YUV/libyuv/src/mjpeg_decoder.cc
File=$(Project.Directory)/src/YUV/libyuv/src/mjpeg_validate.cc
File=$(Project.Directory)/src/YUV/libyuv/src/planar_functions.cc
File=$(Project.Directory)/src/YUV/libyuv/src/rotate.cc
File=$(Project.Directory)/src/YUV/libyuv/src/rotate_argb.cc
File=$(Project.Directory)/src/YUV/libyuv/src/rotate_mips.cc
File=$(Project.Directory)/src/YUV/libyuv/src/rotate_neon.cc
File=$(Project.Directory)/src/YUV/libyuv/src/rotate_neon64.cc
File=$(Project.Directory)/src/YUV/libyuv/src/row_any.cc
File=$(Project.Directory)/src/YUV/libyuv/src/row_common.cc
File=$(Project.Directory)/src/YUV/libyuv/src/row_gcc.cc
File=$(Project.Directory)/src/YUV/libyuv/src/row_mips.cc
File=$(Project.Directory)/src/YUV/libyuv/src/row_neon.cc
File=$(Project.Directory)/src/YUV/libyuv/src/row_neon64.cc
File=$(Project.Directory)/src/YUV/libyuv/src/row_posix.cc
File=$(Project.Directory)/src/YUV/libyuv/src/row_win.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_any.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_argb.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_argb_neon.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_common.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_gcc.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_mips.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_neon.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_neon64.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_posix.cc
File=$(Project.Directory)/src/YUV/libyuv/src/scale_win.cc
File=$(Project.Directory)/src/YUV/libyuv/src/video_common.cc
File=$(Project.Directory)/src/YUV/libyuv/yuv_libyuv.c
File=$(Project.Directory)/src/YUV/yuv_util.c
  
; Misc Files
File=$(Project.Directory)/src/YUV/libyuv/src/row_x86.asm
File=$(Project.Directory)/src/YUV/libyuv/src/x86inc.asm

[Dependencies]
